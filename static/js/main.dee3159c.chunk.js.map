{"version":3,"sources":["images/preloader.svg","components/Preloader/Preloader.tsx","components/Context/Players.ts","components/Table/Table.tsx","components/Modal/Modal.tsx","App.tsx","index.tsx"],"names":["Preloader","className","type","data","preloader","Players","createContext","Table","props","useState","theadScroll","setTheadScroll","players","useContext","scoreSort","scoreButton","setSelectedPlayer","window","addEventListener","scrollY","classNames","style","paddingLeft","scope","colSpan","paddingRight","onClick","map","player","to","name","src","avatar","alt","verticalAlign","score","Modal","selectedPlayer","portalDiv","document","getElementById","navigate","useNavigate","ReactDom","createPortal","role","tabIndex","display","onKeyPress","bio","viewBox","fill","xmlns","fillRule","clipRule","d","App","setPlayers","setScoreSort","useEffect","EventSource","onmessage","event","JSON","parse","prevPlayers","savedPlayers","localStorage","getItem","savedSortOrder","parseSavedPlayers","parseSortOrder","setItem","stringify","length","Provider","value","reducePlayersScoreSort","sort","player1","player2","increasePlayersScoreSort","handleChangeScoreSort","path","changeToUrlName","split","join","urlName","element","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dee3159c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/preloader.00bab61b.svg\";","import React from 'react';\nimport './Preloader.scss';\nimport preloader from '../../images/preloader.svg';\n\nexport const Preloader: React.FC = () => {\n  return (\n    <div className=\"preloader\">\n      <h2 className=\"preloader__title\">No players available</h2>\n\n      <object\n        type=\"image/svg+xml\"\n        data={preloader}\n      >\n        svg-animation\n      </object>\n    </div>\n  );\n};\n","import { createContext } from 'react';\nimport { IPlayer } from '../../types';\n\nexport const Players = createContext<IPlayer[]>([]);\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useState,\n} from 'react';\nimport './Table.scss';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { IPlayer } from '../../types';\nimport { Players } from '../Context/Players';\n\ninterface Props {\n  scoreSort: boolean;\n  scoreButton: Dispatch<SetStateAction<boolean>>;\n  setSelectedPlayer: Dispatch<SetStateAction<IPlayer | null>>;\n}\n\nexport const Table: React.FC<Props> = (props) => {\n  const [theadScroll, setTheadScroll] = useState<boolean>(false);\n  const players = useContext(Players);\n\n  const {\n    scoreSort,\n    scoreButton,\n    setSelectedPlayer,\n  } = props;\n\n  const changeTheadBoxShadow = () => {\n    if (window.scrollY >= 80) {\n      setTheadScroll(true);\n    } else {\n      setTheadScroll(false);\n    }\n  };\n\n  window.addEventListener('scroll', changeTheadBoxShadow);\n\n  return (\n    <table className=\"table table-borderless\">\n      <thead\n        className={classNames(\n          'table__thead',\n          { 'table__thead--scroll': theadScroll },\n        )}\n      >\n        <tr className=\"table__up-tr\">\n          <th\n            style={{ paddingLeft: '84px' }}\n            scope=\"col\"\n            className=\"table__th table__th-name\"\n            colSpan={2}\n          >\n            Playerâ€™s name\n          </th>\n\n          <th\n            scope=\"col\"\n            className=\"table__th\"\n            style={{ paddingRight: '28px' }}\n          >\n            <button\n              type=\"button\"\n              className=\"table__th-button\"\n              onClick={() => scoreButton(!scoreSort)}\n            >\n              <div className=\"table__th-button-area\">\n                <span\n                  className={classNames(\n                    'table__arrow',\n                    { 'table__arrow--bottom': !scoreSort },\n                  )}\n                />\n                Score\n              </div>\n            </button>\n          </th>\n        </tr>\n      </thead>\n\n      <tbody className=\"table__tbody\">\n        {players.map((player) => (\n          <Link\n            to={`/player/${player.name}`}\n            onClick={() => setSelectedPlayer(player)}\n            className=\"table__tr\"\n            key={player.name}\n          >\n            <td className=\"table__player\" colSpan={2}>\n              <img\n                src={player.avatar}\n                alt=\"person face\"\n                className=\"table__person-avatar\"\n              />\n              <span className=\"table__name\">{player.name}</span>\n            </td>\n\n            <td style={{ verticalAlign: 'middle' }} className=\"table__score\">\n              <span className=\"table__score-number\">{player.score}</span>\n            </td>\n          </Link>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Modal.scss';\nimport ReactDom from 'react-dom';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { IPlayer } from '../../types';\n\ninterface Props {\n  selectedPlayer: IPlayer\n}\n\nexport const Modal: React.FC<Props> = ({ selectedPlayer }) => {\n  const portalDiv = document.getElementById('modal_root')!;\n  const navigate = useNavigate();\n\n  return ReactDom.createPortal(\n    <div\n      role=\"button\"\n      tabIndex={0}\n      style={{ display: 'block' }}\n      onKeyPress={() => navigate('/')}\n      className=\"modal\"\n      onClick={() => navigate('/')}\n    >\n      <div className=\"modal__window\">\n        <div className=\"modal__top-part\">\n          <img\n            src={selectedPlayer.avatar}\n            alt=\"person face\"\n            className=\"modal__image\"\n          />\n\n          <h2 className=\"modal__title\">\n            {selectedPlayer.name}\n          </h2>\n\n          <p className=\"modal__score\">\n            {`Score: ${selectedPlayer.score}`}\n          </p>\n\n          <p className=\"modal__bio\">\n            {selectedPlayer.bio}\n          </p>\n        </div>\n\n        <div className=\"modal__bottom-part\">\n          <Link\n            to=\"/\"\n          >\n            <button\n              type=\"button\"\n              className=\"modal__close-button\"\n            >\n              <svg\n                viewBox=\"0 0 10 11\"\n                fill=\"black\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"modal__button-cross\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M0.188279 9.13636C-0.0627596 9.3874 -0.0627596 9.79441 0.188279 10.0455C0.439317 10.2965 0.846331 10.2965 1.09737 10.0455L4.73374 6.40909L8.37013 10.0455C8.62117 10.2965 9.02818 10.2965 9.27922 10.0455C9.53026 9.79444 9.53026 9.38743 9.27922 9.13639L5.64283 5.49999L9.27919 1.86364C9.53023 1.6126 9.53023 1.20558 9.27919 0.954545C9.02815 0.703506 8.62113 0.703506 8.3701 0.954545L4.73374 4.5909L1.0974 0.954572C0.846366 0.703534 0.439352 0.703534 0.188314 0.954572C-0.0627247 1.20561 -0.0627246 1.61262 0.188314 1.86366L3.82465 5.49999L0.188279 9.13636Z\"\n                />\n              </svg>\n              Close\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>,\n    portalDiv,\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { IPlayer } from './types';\nimport { Preloader } from './components/Preloader/Preloader';\nimport { Table } from './components/Table/Table';\nimport { Modal } from './components/Modal/Modal';\nimport { Players } from './components/Context/Players';\n\nconst App: React.FC = () => {\n  const [players, setPlayers] = useState<IPlayer[]>([]);\n  const [scoreSort, setScoreSort] = useState<boolean>(true);\n  const [selectedPlayer, setSelectedPlayer] = useState<IPlayer | null>(null);\n\n  useEffect(() => {\n    const eventSource = new EventSource('http://localhost:5000');\n\n    eventSource.onmessage = function (event) {\n      const player = JSON.parse(event.data);\n\n      setPlayers(prevPlayers => [...prevPlayers, player]);\n    };\n  }, []);\n\n  useEffect(() => {\n    const savedPlayers = localStorage.getItem('players');\n    const savedSortOrder = localStorage.getItem('sortOrder');\n\n    if (savedPlayers && savedSortOrder) {\n      const parseSavedPlayers = JSON.parse(savedPlayers);\n      const parseSortOrder = JSON.parse(savedSortOrder);\n\n      setPlayers(parseSavedPlayers);\n      setScoreSort(parseSortOrder);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('players', JSON.stringify(players));\n    localStorage.setItem('sortOrder', JSON.stringify(scoreSort));\n  }, [players, scoreSort]);\n\n  const handleChangeScoreSort = () => {\n    const reducePlayersScoreSort = [...players].sort((player1, player2) => (\n      player2.score - player1.score\n    ));\n    const increasePlayersScoreSort = [...players].sort((player1, player2) => (\n      player1.score - player2.score\n    ));\n\n    if (scoreSort) {\n      return reducePlayersScoreSort;\n    }\n\n    return increasePlayersScoreSort;\n  };\n\n  const urlName = (name: string) => {\n    const changeToUrlName = name.split(' ').join('%20');\n\n    return `/player/${changeToUrlName}`;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">\n        Score board\n      </h1>\n\n      {players.length\n        ? (\n          <Players.Provider value={handleChangeScoreSort()}>\n            <Table\n              scoreSort={scoreSort}\n              scoreButton={setScoreSort}\n              setSelectedPlayer={setSelectedPlayer}\n            />\n          </Players.Provider>\n        )\n        : (\n          <Preloader />\n        )}\n\n      {selectedPlayer && selectedPlayer.bio && (\n        <Routes>\n          <Route\n            path={urlName(selectedPlayer.name)}\n            element={(\n              <Modal selectedPlayer={selectedPlayer} />\n            )}\n          />\n        </Routes>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}